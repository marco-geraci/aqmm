// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_hfun_aqmm
List C_hfun_aqmm(NumericVector y, NumericMatrix X, NumericMatrix B, NumericMatrix Z, NumericVector weights, NumericVector theta_x, NumericVector v, NumericMatrix u, NumericVector Phi_inv, NumericMatrix Sigma_inv, int M, int N, IntegerVector ni, int p, int Q, int H, int s, double tau, double omega);
RcppExport SEXP _aqmm_C_hfun_aqmm(SEXP ySEXP, SEXP XSEXP, SEXP BSEXP, SEXP ZSEXP, SEXP weightsSEXP, SEXP theta_xSEXP, SEXP vSEXP, SEXP uSEXP, SEXP Phi_invSEXP, SEXP Sigma_invSEXP, SEXP MSEXP, SEXP NSEXP, SEXP niSEXP, SEXP pSEXP, SEXP QSEXP, SEXP HSEXP, SEXP sSEXP, SEXP tauSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta_x(theta_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Phi_inv(Phi_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Sigma_inv(Sigma_invSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type H(HSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(C_hfun_aqmm(y, X, B, Z, weights, theta_x, v, u, Phi_inv, Sigma_inv, M, N, ni, p, Q, H, s, tau, omega));
    return rcpp_result_gen;
END_RCPP
}
// C_hfunD_aqmm
List C_hfunD_aqmm(NumericVector y, NumericMatrix X, NumericMatrix B, NumericMatrix Z, NumericVector weights, NumericVector theta_x, NumericVector v, NumericMatrix u, NumericVector Phi_inv, NumericMatrix Sigma_inv, int M, int N, IntegerVector ni, int p, int Q, int H, int s, double tau, double omega);
RcppExport SEXP _aqmm_C_hfunD_aqmm(SEXP ySEXP, SEXP XSEXP, SEXP BSEXP, SEXP ZSEXP, SEXP weightsSEXP, SEXP theta_xSEXP, SEXP vSEXP, SEXP uSEXP, SEXP Phi_invSEXP, SEXP Sigma_invSEXP, SEXP MSEXP, SEXP NSEXP, SEXP niSEXP, SEXP pSEXP, SEXP QSEXP, SEXP HSEXP, SEXP sSEXP, SEXP tauSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
	Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta_x(theta_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Phi_inv(Phi_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Sigma_inv(Sigma_invSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type H(HSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(C_hfunD_aqmm(y, X, B, Z, weights, theta_x, v, u, Phi_inv, Sigma_inv, M, N, ni, p, Q, H, s, tau, omega));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aqmm_C_hfun_aqmm", (DL_FUNC) &_aqmm_C_hfun_aqmm, 19},
    {"_aqmm_C_hfunD_aqmm", (DL_FUNC) &_aqmm_C_hfunD_aqmm, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_aqmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
